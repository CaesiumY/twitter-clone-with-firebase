{"version":3,"sources":["components/Navigation.jsx","pages/NotFound.jsx","firebaseConfig.js","components/Tweet.jsx","components/ProfileForm.jsx","pages/Profile.jsx","components/AuthForm.jsx","components/SocialLogin.jsx","pages/Auth.jsx","components/TweetForm.jsx","pages/Home.jsx","route/index.jsx","App.js","index.js"],"names":["Navigation","userObj","style","display","justifyContent","marginTop","to","className","icon","faTwitter","color","size","faUserAlt","NotFound","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Tweet","tweetObj","isOwner","useState","isEdit","setIsEdit","text","newTweet","setNewTweet","toggleIsEdit","prev","onDeleteTweet","e","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","onSubmit","preventDefault","update","type","value","onChange","target","maxLength","autoFocus","required","onClick","href","src","alt","faPencilAlt","faTrash","ProfileForm","onRefreshUser","displayName","email","split","newDisplayName","setNewDisplayName","history","useHistory","onSignOut","signOut","push","updateProfile","Profile","myTweets","setMyTweets","useEffect","collection","where","uid","orderBy","get","tweets","tweetData","docs","map","data","getMyTweets","tweet","key","AuthForm","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","placeholder","name","htmlFor","SocialLogin","provider","onSocialLogin","auth","GoogleAuthProvider","GithubAuthProvider","alert","signInWithPopup","textTransform","faGoogle","faGithub","Auth","marginBottom","TweetForm","setTweet","attachment","setAttachment","ref","child","uuid","putString","response","getDownloadURL","createdAt","Date","now","add","faPlus","accept","myFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","setTweets","onSnapshot","snapshots","snapshot","AppRouter","isAuth","maxWidth","width","margin","exact","path","from","App","isInit","setIsinit","setIsAuth","setUserObj","onAuthStateChanged","user","getCompressedUser","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15fb2b73.chunk.js","sourcesContent":["import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" className=\"navLink__text\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04aaff\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>Home</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\" className=\"navLink__text\">\r\n            <FontAwesomeIcon icon={faUserAlt} color={\"#04aaff\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>Profile</span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <div>404 Not Found</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"firebaseConfig\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n  const toggleIsEdit = () => setIsEdit((prev) => !prev);\r\n\r\n  const onDeleteTweet = async (e) => {\r\n    const confirm = window.confirm(\"Are you sure to delete this Tweet?\");\r\n    if (!confirm) return;\r\n\r\n    await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n\r\n    if (tweetObj.attachmentUrl) {\r\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    setNewTweet(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n\r\n    setIsEdit(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweet\">\r\n      {isEdit ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              value={newTweet}\r\n              onChange={onChange}\r\n              maxLength={120}\r\n              autoFocus\r\n              required\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Edit tweet\" className=\"formBtn\" />\r\n          </form>\r\n\r\n          <button onClick={toggleIsEdit} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {tweetObj.attachmentUrl && (\r\n            <a href={tweetObj.attachmentUrl} target=\"__blank\">\r\n              <img src={tweetObj.attachmentUrl} alt=\"tweetImage\" />\r\n            </a>\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"tweet__actions\">\r\n              <span onClick={toggleIsEdit}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n              <span onClick={onDeleteTweet}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import { authService } from \"firebaseConfig\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ProfileForm = ({ userObj, onRefreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(\r\n    userObj.displayName || userObj.email.split(\"@\")[0]\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const onSignOut = async () => {\r\n    await authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { value } = e.target;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n\r\n      onRefreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <p className=\"profileName\">\r\n        {userObj.displayName || userObj.email.split(\"@\")[0]}'s Profile\r\n      </p>\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n      <span onClick={onSignOut} className=\"formBtn cancelBtn logOut\">\r\n        Log Out\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"firebaseConfig\";\r\nimport Tweet from \"components/Tweet\";\r\nimport ProfileForm from \"components/ProfileForm\";\r\n\r\nconst Profile = ({ userObj, onRefreshUser }) => {\r\n  const [myTweets, setMyTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyTweets = async () => {\r\n      const tweets = await dbService\r\n        .collection(\"tweets\")\r\n        .where(\"uid\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .get();\r\n\r\n      const tweetData = tweets.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      setMyTweets(tweetData);\r\n    };\r\n\r\n    getMyTweets();\r\n  }, [userObj]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ProfileForm\r\n        userObj={userObj}\r\n        onRefreshUser={onRefreshUser}\r\n      ></ProfileForm>\r\n\r\n      <p className=\"profile__myTweets\">My Tweets</p>\r\n      {myTweets.map((tweet) => (\r\n        <Tweet\r\n          key={tweet.id}\r\n          tweetObj={tweet}\r\n          isOwner={tweet.uid === userObj.uid}\r\n        ></Tweet>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { authService } from \"firebaseConfig\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleNewAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Sign In\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isNewAccount\"\r\n          id=\"isNewAccount\"\r\n          value=\"isNewAccount\"\r\n          onChange={toggleNewAccount}\r\n          className=\"authSwitch\"\r\n        />\r\n        <label htmlFor=\"isNewAccount\" className=\"authSwitch__label\">\r\n          Already have Account?\r\n        </label>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"firebaseConfig\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst SocialLogin = ({ provider }) => {\r\n  const onSocialLogin = async (e) => {\r\n    const { name } = e.target;\r\n    let provider;\r\n\r\n    try {\r\n      if (name === \"google\") {\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      } else if (name === \"github\") {\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n      } else {\r\n        alert(`Wrong ${provider} provider!`);\r\n      }\r\n      await authService.signInWithPopup(provider);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"authBtn\" name={provider} onClick={onSocialLogin}>\r\n      Continue with{\" \"}\r\n      <span style={{ textTransform: \"capitalize\" }}>{provider} </span>\r\n      <FontAwesomeIcon icon={provider === \"google\" ? faGoogle : faGithub} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SocialLogin;\r\n","import React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport SocialLogin from \"components/SocialLogin\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04aaff\"}\r\n        size=\"5x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm></AuthForm>\r\n      <div className=\"authBtns\">\r\n        <SocialLogin provider={\"google\"}></SocialLogin>\r\n        <SocialLogin provider={\"github\"}></SocialLogin>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"firebaseConfig\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst TweetForm = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    setTweet(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (tweet === \"\") return;\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment) {\r\n      const ref = storageService.ref().child(`${userObj.uid}/${uuid()}`);\r\n      const response = await ref.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      uid: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChangeFile = (e) => {\r\n    const { files } = e.target;\r\n\r\n    const myFile = files[0];\r\n\r\n    if (!myFile) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const { result } = finishedEvent.target;\r\n\r\n      setAttachment(result);\r\n    };\r\n\r\n    reader.readAsDataURL(myFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"tweetForm\">\r\n        <div className=\"tweetInput__container\">\r\n          <input\r\n            className=\"tweetInput__input\"\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            value={tweet}\r\n            onChange={onChange}\r\n            maxLength={120}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"tweetInput__arrow\" />\r\n        </div>\r\n\r\n        <label htmlFor=\"attach-file\" className=\"tweetInput__label\">\r\n          <span>Add Photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onChangeFile}\r\n          style={{ opacity: 0 }}\r\n        />\r\n        {attachment && (\r\n          <div className=\"tweetInput__attachment\">\r\n            <img\r\n              src={attachment}\r\n              style={{ backgroundImage: attachment }}\r\n              alt={tweet}\r\n            />\r\n            <div className=\"tweetForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"../firebaseConfig\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetForm from \"components/TweetForm\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"tweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshots) => {\r\n        const tweetData = snapshots.docs.map((snapshot) => ({\r\n          id: snapshot.id,\r\n          ...snapshot.data(),\r\n        }));\r\n\r\n        setTweets(tweetData);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetForm userObj={userObj}></TweetForm>\r\n      <div style={{ marginTop: 10 }}>\r\n        {tweets.map((tweetObj) => (\r\n          <Tweet\r\n            key={tweetObj.id}\r\n            tweetObj={tweetObj}\r\n            isOwner={tweetObj.uid === userObj.uid}\r\n          ></Tweet>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Navigation from \"components/Navigation\";\r\nimport NotFound from \"pages/NotFound\";\r\nimport Profile from \"pages/Profile\";\r\nimport React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Auth from \"../pages/Auth\";\r\nimport Home from \"../pages/Home\";\r\n\r\nconst AppRouter = ({ isAuth, userObj, onRefreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isAuth && <Navigation userObj={userObj}></Navigation>}\r\n\r\n      {isAuth ? (\r\n        <div\r\n          style={{\r\n            maxWidth: 890,\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            marginTop: 80,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj}></Home>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile\r\n                userObj={userObj}\r\n                onRefreshUser={onRefreshUser}\r\n              ></Profile>\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <NotFound></NotFound>\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\"></Redirect>\r\n          </Switch>\r\n        </div>\r\n      ) : (\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Auth></Auth>\r\n          </Route>\r\n\r\n          <Route path=\"*\">\r\n            <NotFound></NotFound>\r\n          </Route>\r\n          <Redirect from=\"*\" to=\"/\"></Redirect>\r\n        </Switch>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"route\";\nimport { authService } from \"firebaseConfig\";\n\nfunction App() {\n  const [isInit, setIsinit] = useState(false);\n  const [isAuth, setIsAuth] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsAuth(true);\n        setUserObj(getCompressedUser(user));\n      } else {\n        setIsAuth(false);\n        setUserObj(null);\n      }\n      setIsinit(true);\n    });\n  }, []);\n\n  const onRefreshUser = () => {\n    setUserObj(getCompressedUser(authService.currentUser));\n  };\n\n  // 리액트의 가상돔은 크기가 큰 오브젝트를 비교하는데 시간이 걸리면 힘들어한다.\n  // 그래서 일부러 큰 오브젝트를 작게 만들어 업데이트를 하도록 했다.\n\n  const getCompressedUser = (user) => {\n    return {\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    };\n  };\n\n  return (\n    <>\n      {isInit ? (\n        <AppRouter\n          isAuth={isAuth}\n          userObj={userObj}\n          onRefreshUser={onRefreshUser}\n        ></AppRouter>\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}